export type ModuleExports = {
    "memory": WebAssembly.Memory;
    "next_bytes": (a: number) => number;
  };

const hex = "0061736d01000000010c0260047f7f7f7f0060017f0003030200010503010001071702066d656d6f727902000a6e6578745f627974657300010a9f03026401047f20032802002000280200200128020022056a22047341107721072005200228020020076a220673410c7721052000200420056a22043602002003200720047341087722073602002002200620076a2206360200200120052006734107773602000bb70201027f410021010240034020014180016a200129030037030041c000200141086a2201460d010c000b0b0240034041800141900141a00141b001100041840141940141a40141b401100041880141980141a80141b8011000418c01419c0141ac0141bc01100041800141940141a80141bc01100041840141980141ac0141b0011000418801419c0141a00141b4011000418c0141900141a40141b8011000200041026b2200450d010c000b0b41c0002101024003402001200028020041800120006a2802006a22023a0000200141016a220120024108763a0000200141016a220120024110763a0000200141016a220120024118763a0000200141016a210141c000200041046a2200460d010c000b0b4130413028020041016a2202360200024041002002470d014134410141342802006a3602000b0b";

const high_map: {[key: string]: number } = {
  0: 0x00, 1: 0x10, 2: 0x20, 3: 0x30,
  4: 0x40, 5: 0x50, 6: 0x60, 7: 0x70,
  8: 0x80, 9: 0x90, a: 0xa0, b: 0xb0,
  c: 0xc0, d: 0xd0, e: 0xe0, f: 0xf0,
}

const low_map: {[key: string]: number } = {
  0: 0x00, 1: 0x01, 2: 0x02, 3: 0x03,
  4: 0x04, 5: 0x05, 6: 0x06, 7: 0x07,
  8: 0x08, 9: 0x09, a: 0x0a, b: 0x0b,
  c: 0x0c, d: 0x0d, e: 0x0e, f: 0x0f,
}

const bytes = new Uint8Array(hex.length / 2);
for (let i = 0, j = 0; j < hex.length; i++, j+=2) {
  bytes[i] = high_map[hex[j]] | low_map[hex[j+1]];
}

const modp = WebAssembly.compile(bytes);

export default async function(): Promise<ModuleExports> {
  const { exports } = await WebAssembly.instantiate(await modp);
  return exports as unknown as ModuleExports;
}
